package CommerceApp;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Adapters.JDBCAdapter;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.math.BigDecimal;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import objects.TableModelList;
import util.Utilities;
/**
 *
 * @author DELL
 */
public class DayMouvements extends javax.swing.JDialog 
        implements PropertyChangeListener{
    
    private String searchDate ;
    private Timer t;
    private ActionListener al;
    private int progressState = 0;
    private final int progressBarMax = 12;
    private static final int delay = 100;
    private Task task;
    
    /**
     * Creates new form DayMouvements
     */
    public DayMouvements(JFrame frm) {
        super(frm, true);
        searchDate = "CURDATE()";
        initComponents();
        setIconImage(Utilities.setIconImage(this));
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ventesTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        dateChooser = new datechooser.beans.DateChooserCombo();
        jScrollPane2 = new javax.swing.JScrollPane();
        achatsTable = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        versementClientTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        versementFournisseurTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ventesTextField = new javax.swing.JTextField();
        versementFournisseurTextField = new javax.swing.JTextField();
        achatsTextField = new javax.swing.JTextField();
        versementClientTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        entreesTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sortiesTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        caisseTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        benificeTextField = new javax.swing.JTextField();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 255));
        setForeground(new java.awt.Color(51, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        ventesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ventesTable);

        jLabel5.setBackground(new java.awt.Color(0, 51, 153));
        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("  La balance");
        jLabel5.setOpaque(true);

        dateChooser.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooser.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 18));
    dateChooser.setNavigateFont(new java.awt.Font("Serif", java.awt.Font.PLAIN, 11));
    dateChooser.setCurrentNavigateIndex(0);
    dateChooser.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    achatsTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane2.setViewportView(achatsTable);

    refreshButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    refreshButton.setText("Refresh");
    refreshButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshButtonActionPerformed(evt);
        }
    });

    jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    jLabel2.setText("Les achats");

    versementClientTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane3.setViewportView(versementClientTable);

    jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    jLabel3.setText("Les versements clients");

    versementFournisseurTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    jScrollPane4.setViewportView(versementFournisseurTable);

    jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    jLabel1.setText("Les ventes");

    jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    jLabel4.setText("Les versements fournisseur");

    ventesTextField.setEditable(false);
    ventesTextField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    ventesTextField.setForeground(new java.awt.Color(0, 51, 255));
    ventesTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    ventesTextField.setText("000000");
    ventesTextField.setFocusable(false);

    versementFournisseurTextField.setEditable(false);
    versementFournisseurTextField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    versementFournisseurTextField.setForeground(new java.awt.Color(51, 51, 255));
    versementFournisseurTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    versementFournisseurTextField.setText("000000");
    versementFournisseurTextField.setFocusable(false);

    achatsTextField.setEditable(false);
    achatsTextField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    achatsTextField.setForeground(new java.awt.Color(51, 51, 255));
    achatsTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    achatsTextField.setText("000000");
    achatsTextField.setFocusable(false);

    versementClientTextField.setEditable(false);
    versementClientTextField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    versementClientTextField.setForeground(new java.awt.Color(0, 51, 255));
    versementClientTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    versementClientTextField.setText("000000");
    versementClientTextField.setFocusable(false);

    jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
    jLabel6.setForeground(new java.awt.Color(255, 0, 0));
    jLabel6.setText("Les entrées :");

    entreesTextField.setEditable(false);
    entreesTextField.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
    entreesTextField.setForeground(new java.awt.Color(255, 0, 0));
    entreesTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    entreesTextField.setText("000000");

    jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
    jLabel7.setForeground(new java.awt.Color(255, 0, 0));
    jLabel7.setText("Les sorties  :");

    sortiesTextField.setEditable(false);
    sortiesTextField.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
    sortiesTextField.setForeground(new java.awt.Color(255, 0, 0));
    sortiesTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    sortiesTextField.setText("000000");

    jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
    jLabel8.setForeground(new java.awt.Color(0, 0, 255));
    jLabel8.setText("La caisse  :");

    caisseTextField.setEditable(false);
    caisseTextField.setBackground(new java.awt.Color(0, 0, 153));
    caisseTextField.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
    caisseTextField.setForeground(new java.awt.Color(255, 255, 255));
    caisseTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    caisseTextField.setText("000000");

    jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(0, 0, 255));
    jLabel9.setText("Bénifice    :");

    benificeTextField.setEditable(false);
    benificeTextField.setBackground(new java.awt.Color(0, 0, 153));
    benificeTextField.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
    benificeTextField.setForeground(new java.awt.Color(255, 255, 255));
    benificeTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
    benificeTextField.setText("000000");

    progressBar.setStringPainted(true);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addGap(131, 131, 131)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(caisseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(entreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(benificeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(sortiesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(177, 177, 177)
                            .addComponent(versementClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(268, 268, 268)
                            .addComponent(ventesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(62, 62, 62)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(254, 254, 254)
                            .addComponent(achatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(128, 128, 128)
                            .addComponent(versementFournisseurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(refreshButton))
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(refreshButton)
                        .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ventesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addComponent(achatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(versementFournisseurTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jLabel3))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(versementClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sortiesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(benificeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(entreesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(caisseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(52, Short.MAX_VALUE))
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dateChooser, refreshButton});

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        initFrame();
    }//GEN-LAST:event_formWindowOpened

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        dateChangeProcess();
    }//GEN-LAST:event_refreshButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable achatsTable;
    private javax.swing.JTextField achatsTextField;
    private javax.swing.JTextField benificeTextField;
    private javax.swing.JTextField caisseTextField;
    private datechooser.beans.DateChooserCombo dateChooser;
    private javax.swing.JTextField entreesTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField sortiesTextField;
    private javax.swing.JTable ventesTable;
    private javax.swing.JTextField ventesTextField;
    private javax.swing.JTable versementClientTable;
    private javax.swing.JTextField versementClientTextField;
    private javax.swing.JTable versementFournisseurTable;
    private javax.swing.JTextField versementFournisseurTextField;
    // End of variables declaration//GEN-END:variables
    class Task extends SwingWorker<Void, Void> {
    /*
     * Main task. Executed in background thread.
     */
        @Override
        public Void doInBackground() {
            Random ran = new Random();
            setProgress(0);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVentesTable();
            setProgress(8);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillAchatsTable();
            setProgress(16);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVersementClientTable();
            setProgress(24);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVersementFournisseurTable();
            setProgress(32);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVentesTextField();
            setProgress(40);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillAchatsTextField();
            setProgress(48);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVersementClientTextField();
            setProgress(56);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillVersementFournisseurTextField();
            setProgress(64);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillEntreesTextField();
            setProgress(72);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillSortiesTextField();
            setProgress(80);
            try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillCaisseTextField();
            setProgress(100);try{
                Thread.sleep(ran.nextInt(1000));
            }catch(InterruptedException ignore) {}
            fillBenificeTextField();
            return null;
        }

        @Override
        public void done() {
            setProgress(100);
            setCursor(Cursor.getDefaultCursor());
        }    
    }
    private void initFrame() {

        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));    
        task = new Task();
        task.addPropertyChangeListener(this);
        task.execute();
    }
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            progressBar.setValue(progress);
        } 
    }   
    private void fillVentesTable() {
        TableModelList table = new TableModelList(Utilities.URL, Utilities.DRIVER_NAME
                                    ,Utilities.USER, Utilities.PASSWORD);
        String[] colomnNames = {"N°", "DATE", "HEURE", "NOM", "MODE", "TOTAL",
                                    "VERSEMENT"};
        table.setColumnNames(colomnNames);
        String sql = "SELECT v.ida,v.d,v.t,c.nom,v.mode,v.total, "
                     + "CASE WHEN v.mode='ESPECE' THEN v.total " 
                     +      "WHEN v.mode='CREDIT' THEN 0.00 " 
                     +                "ELSE a.mont END as VERSEMENT "
                     + "FROM vente v INNER JOIN client c "
                     + "on v.id = c.id "
                     + "LEFT JOIN versc a "
                     + "ON v.ida = a.ida "
                     + "WHERE v.d = " 
                     + searchDate
                     // the other where clauses
                     + " ORDER BY v.ida ";
        table.executeQuery(sql);
        ventesTable.setModel(table);
    }

    private void fillAchatsTable() {
        TableModelList table = new TableModelList(Utilities.URL, Utilities.DRIVER_NAME
                                    ,Utilities.USER, Utilities.PASSWORD);
        String[] colomnNames = {"N°", "DATE", "HEURE", "NOM", "MODE", "TOTAL",
                                    "VERSEMENT"};
        table.setColumnNames(colomnNames);
        String sql =   "SELECT v.ida,v.d,v.t,c.nom,v.mode,v.total, "
                     + "CASE WHEN v.mode='ESPECE' THEN v.total " 
                     +      "WHEN v.mode='CREDIT' THEN 0.00 " 
                     +                "ELSE a.mont END as VERSEMENT "
                     + "FROM achat v INNER JOIN four c "
                     + "on v.id = c.id "
                     + "LEFT JOIN versf a "
                     + "ON v.ida = a.ida "
                     +"WHERE v.d = "
                     + searchDate
                     // the other where clauses
                     + " ORDER BY v.ida ";
        table.executeQuery(sql);   
        achatsTable.setModel(table);
    }

    private void fillVersementClientTable() {
        TableModelList table = new TableModelList(Utilities.URL, Utilities.DRIVER_NAME
                                    ,Utilities.USER, Utilities.PASSWORD);
        String[] colomnNames = {"N°", "DATE", "HEURE", "NOM", "MODE", "TOTAL"};
        table.setColumnNames(colomnNames);
        String sql =  "SELECT idv,d,t,c.nom,mode,mont "
                     + "FROM versc v LEFT JOIN client c "
                     + "ON v.id = c.id "
                     + "WHERE v.d = "
                     + searchDate
                     + " AND IDA = 0.0" 
                     // the other where clauses
                     + " ORDER BY v.ida ";
        table.executeQuery(sql);
        versementClientTable.setModel(table);
    }

    private void fillVersementFournisseurTable() {
        TableModelList table = new TableModelList(Utilities.URL, Utilities.DRIVER_NAME
                                    ,Utilities.USER, Utilities.PASSWORD);
        String[] colomnNames = {"N°", "DATE", "HEURE", "NOM", "MODE", "TOTAL"};
        table.setColumnNames(colomnNames);
        String sql =   "SELECT idv,d,t,c.nom,mode,mont "
                     + "FROM versf v LEFT JOIN four c "
                     + "ON v.id = c.id "
                     + "WHERE v.d = "
                     + searchDate
                     + " AND IDA = 0.0" 
                     // the other where clauses
                     + " ORDER BY v.ida ";
        table.executeQuery(sql); 
        versementFournisseurTable.setModel(table);
    }

    private void dateChangeProcess() {
        searchDate = Utilities.revertDate(dateChooser.getText());
        initFrame();
    }
    
    private String getSum(int j, JTable resultTable) {
        BigDecimal result = new BigDecimal(0);
        int res = 0;
        
        for(int i=0; i < resultTable.getRowCount(); i++){
            
            result = (BigDecimal)resultTable.getValueAt(i, 
                            resultTable.getColumnCount()- 1);
            res += result.doubleValue();
            
        }
        return Double.toString(res);    
    }

    private void fillVentesTextField() {
        ventesTextField.setText(getSum(7,ventesTable));
    }

    private void fillAchatsTextField() {
        achatsTextField.setText(getSum(7,achatsTable));
    }

    private void fillVersementClientTextField() {
        versementClientTextField.setText(getSum(6,versementClientTable));
    }

    private void fillVersementFournisseurTextField() {
        versementFournisseurTextField.setText(getSum(6,versementFournisseurTable));
    }

    private void fillEntreesTextField() {
        double ventes = Double.parseDouble(ventesTextField.getText());
        double versement = Double.parseDouble(
                versementClientTextField.getText());
        double entrees = ventes + versement;
        entreesTextField.setText(Double.toString(entrees));
    }

    private void fillSortiesTextField() {
        double achats = Double.parseDouble(achatsTextField.getText());
        double versement = Double.parseDouble(
                 versementFournisseurTextField.getText());
        double sorties = achats + versement;
        sortiesTextField.setText(Double.toString(sorties));
    }

    private void fillCaisseTextField() {
        double entrees = Double.parseDouble(entreesTextField.getText());
        double sorties = Double.parseDouble(sortiesTextField.getText());
        double caisse = entrees - sorties;
        caisseTextField.setText(Double.toString(caisse));
    }

    private void fillBenificeTextField() {
        JDBCAdapter table = new JDBCAdapter(Utilities.URL, Utilities.DRIVER_NAME
                                    ,Utilities.USER, Utilities.PASSWORD);
        
        double totalVentes = Double.parseDouble(getSum(6,ventesTable));
        double totalCoutVents;
        String sql = "SELECT ida FROM vente where d = "
                        + searchDate;
        table.executeQuery(sql);
        int firstID = (int)table.getValueAt(0, 0);
        int lastID = (int)table.getValueAt(table.getRowCount()-1,0);
        sql = "SELECT sum(qtea * qtua * (prixa - st)) as somme "
                + "FROM lvente where ida >= "
                + firstID
                + " and ida <="
                + lastID;
        table.executeQuery(sql);
        BigDecimal result = new BigDecimal(0);
        result = (BigDecimal)table.getValueAt(table.getRowCount()-1,0);
        int res = result.intValue();
        benificeTextField.setText(Integer.toString(res));
    }
}
