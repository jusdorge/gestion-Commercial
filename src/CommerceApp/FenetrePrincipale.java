/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CommerceApp;

import Adapters.FrameAdapter;
import Adapters.JDBCAdapter;
import CommerceApp.fileDir.NewDBJDialog;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.TableColumn;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import util.FileProcess;
import util.Operation;
import util.Utilities;

/**
 *
 * @author DELL
 */
public class FenetrePrincipale extends javax.swing.JFrame {
    static JFrame parentFrame;
    /**
     * Creates new form FenetrePrincipale
     */
    public FenetrePrincipale() {    
        initComponents();
        setIconImage(Utilities.setIconImage(this));
        this.setExtendedState(MAXIMIZED_BOTH);
        //FrameAdapter.centerFrame(this);
        parentFrame = this;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator12 = new javax.swing.JSeparator();
        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JPopupMenu.Separator();
        ImportMenuItem = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        searchMenuItem = new javax.swing.JMenuItem();
        ProductMenu = new javax.swing.JMenu();
        listProductMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        newProductMenuItem = new javax.swing.JMenuItem();
        modifyProductMenuItem = new javax.swing.JMenuItem();
        deleteProductMenuItem = new javax.swing.JMenuItem();
        consultMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        statisticProductMenuItem = new javax.swing.JMenuItem();
        stockProductMenuItem = new javax.swing.JMenuItem();
        searchProductMenuItem = new javax.swing.JMenuItem();
        ProviderMenu = new javax.swing.JMenu();
        listProviderMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        newProviderMenuItem = new javax.swing.JMenuItem();
        modifyProviderMenuItem = new javax.swing.JMenuItem();
        deleteProviderMenuItem = new javax.swing.JMenuItem();
        consultProviderMenuItem5 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        providerSituationMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        nouveauVersementFournisseurMenuItem = new javax.swing.JMenuItem();
        chercherversementMenuItem = new javax.swing.JMenuItem();
        buyPerProviderMenuItem = new javax.swing.JMenuItem();
        providerSearchMenuItem = new javax.swing.JMenuItem();
        CustomerMenu = new javax.swing.JMenu();
        listCustomerMenuItem = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        newCustomerMenuItem = new javax.swing.JMenuItem();
        modifyCustomerMenuItem = new javax.swing.JMenuItem();
        deleteCustomerMenuItem = new javax.swing.JMenuItem();
        consultCustomerMenuItem = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        customerSituationMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        newWidthDrawelMenuItem = new javax.swing.JMenuItem();
        searchWidthDrawelMenuItem = new javax.swing.JMenuItem();
        sellsPerCustomerMenuItem = new javax.swing.JMenuItem();
        customerSearchMenuItem = new javax.swing.JMenuItem();
        SellMenu = new javax.swing.JMenu();
        listBuyMenuItem = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        newBuyMenuItem = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        listReturnSellMenuItem = new javax.swing.JMenuItem();
        retourAchatMenuItem = new javax.swing.JMenuItem();
        deletedModifiedBUY = new javax.swing.JMenuItem();
        BuyMenu = new javax.swing.JMenu();
        listSellMenuItem = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        newSellMenuItem = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        listRetrunBuyMenuItem = new javax.swing.JMenuItem();
        retourVenteMenuItem = new javax.swing.JMenuItem();
        compoirSellMenuItem = new javax.swing.JMenuItem();
        deletedSellMenuItem = new javax.swing.JMenuItem();
        mouvementMenu = new javax.swing.JMenu();
        dayMouvementMenuItem = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        graphRecetteMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        saveDataBaseMenuItem = new javax.swing.JMenuItem();
        restorDataBaseMenuItem = new javax.swing.JMenuItem();
        emtyDataBaseMenuItem = new javax.swing.JMenuItem();
        parameterMenuItem = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSaveProcTrig = new javax.swing.JMenuItem();
        archiveMenuItem = new javax.swing.JMenuItem();
        createTables = new javax.swing.JMenuItem();
        jSeparator16 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        windowMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gestion commercial");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1024, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );

        menuBar.setNextFocusableComponent(FileMenu);

        FileMenu.setMnemonic('F');
        FileMenu.setText("Fichier");

        jMenuItem1.setText("Nouveau");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        FileMenu.add(jMenuItem1);

        jMenuItem2.setText("Modifier");
        FileMenu.add(jMenuItem2);
        FileMenu.add(jSeparator15);

        ImportMenuItem.setText("Import");
        ImportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(ImportMenuItem);
        FileMenu.add(jSeparator10);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Quitter");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        FileMenu.add(jMenuItem4);

        menuBar.add(FileMenu);

        EditMenu.setMnemonic('E');
        EditMenu.setText("Edition");

        undoMenuItem.setText("Undo");
        EditMenu.add(undoMenuItem);

        redoMenuItem.setText("Redo");
        EditMenu.add(redoMenuItem);
        EditMenu.add(jSeparator1);

        cutMenuItem.setText("Couper");
        EditMenu.add(cutMenuItem);

        copyMenuItem.setText("Copier");
        EditMenu.add(copyMenuItem);

        pasteMenuItem.setText("Coller");
        EditMenu.add(pasteMenuItem);
        EditMenu.add(jSeparator11);

        searchMenuItem.setText("Recherche");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        EditMenu.add(searchMenuItem);

        menuBar.add(EditMenu);

        ProductMenu.setMnemonic('P');
        ProductMenu.setText("Produit");

        listProductMenuItem.setText("Liste des produits");
        listProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(listProductMenuItem);
        ProductMenu.add(jSeparator2);

        newProductMenuItem.setText("Nouveau");
        newProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(newProductMenuItem);

        modifyProductMenuItem.setText("Modifier");
        modifyProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(modifyProductMenuItem);

        deleteProductMenuItem.setText("Supprimer");
        deleteProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(deleteProductMenuItem);

        consultMenuItem.setText("Consultation");
        consultMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(consultMenuItem);
        ProductMenu.add(jSeparator3);

        statisticProductMenuItem.setText("Satistique");
        ProductMenu.add(statisticProductMenuItem);

        stockProductMenuItem.setText("Stock");
        ProductMenu.add(stockProductMenuItem);

        searchProductMenuItem.setText("Recherche");
        searchProductMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchProductMenuItemActionPerformed(evt);
            }
        });
        ProductMenu.add(searchProductMenuItem);

        menuBar.add(ProductMenu);

        ProviderMenu.setMnemonic('S');
        ProviderMenu.setText("Fournisseur");

        listProviderMenuItem.setText("Liste des Fournisseurs");
        listProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(listProviderMenuItem);
        ProviderMenu.add(jSeparator4);

        newProviderMenuItem.setText("Nouveau");
        newProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(newProviderMenuItem);

        modifyProviderMenuItem.setText("Modifier");
        modifyProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(modifyProviderMenuItem);

        deleteProviderMenuItem.setText("Supprimer");
        deleteProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(deleteProviderMenuItem);

        consultProviderMenuItem5.setText("Consultation");
        consultProviderMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultProviderMenuItem5ActionPerformed(evt);
            }
        });
        ProviderMenu.add(consultProviderMenuItem5);
        ProviderMenu.add(jSeparator6);

        providerSituationMenuItem.setText("Situation");
        providerSituationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                providerSituationMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(providerSituationMenuItem);

        jMenu1.setText("Versement");

        nouveauVersementFournisseurMenuItem.setText("Nouveau");
        jMenu1.add(nouveauVersementFournisseurMenuItem);

        chercherversementMenuItem.setText("Chercher Versement");
        jMenu1.add(chercherversementMenuItem);

        ProviderMenu.add(jMenu1);

        buyPerProviderMenuItem.setText("Achat par fournisseur");
        buyPerProviderMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyPerProviderMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(buyPerProviderMenuItem);

        providerSearchMenuItem.setText("Recherche");
        providerSearchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                providerSearchMenuItemActionPerformed(evt);
            }
        });
        ProviderMenu.add(providerSearchMenuItem);

        menuBar.add(ProviderMenu);

        CustomerMenu.setMnemonic('C');
        CustomerMenu.setText("Client");

        listCustomerMenuItem.setText("Liste des clients");
        listCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(listCustomerMenuItem);
        CustomerMenu.add(jSeparator5);

        newCustomerMenuItem.setText("Nouveau");
        newCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(newCustomerMenuItem);

        modifyCustomerMenuItem.setText("Modifier");
        modifyCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(modifyCustomerMenuItem);

        deleteCustomerMenuItem.setText("Supprimer");
        deleteCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(deleteCustomerMenuItem);

        consultCustomerMenuItem.setText("Consultation");
        consultCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(consultCustomerMenuItem);
        CustomerMenu.add(jSeparator7);

        customerSituationMenuItem.setText("Situation");
        customerSituationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSituationMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(customerSituationMenuItem);

        jMenu2.setText("Versement");

        newWidthDrawelMenuItem.setText("Nouveau");
        jMenu2.add(newWidthDrawelMenuItem);

        searchWidthDrawelMenuItem.setText("Chercher");
        jMenu2.add(searchWidthDrawelMenuItem);

        CustomerMenu.add(jMenu2);

        sellsPerCustomerMenuItem.setText("Ventes par client");
        sellsPerCustomerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellsPerCustomerMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(sellsPerCustomerMenuItem);

        customerSearchMenuItem.setText("Recherche");
        customerSearchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerSearchMenuItemActionPerformed(evt);
            }
        });
        CustomerMenu.add(customerSearchMenuItem);

        menuBar.add(CustomerMenu);

        SellMenu.setMnemonic('A');
        SellMenu.setText("Achat");

        listBuyMenuItem.setText("Liste d'achats");
        listBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBuyMenuItemActionPerformed(evt);
            }
        });
        SellMenu.add(listBuyMenuItem);
        SellMenu.add(jSeparator8);

        newBuyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, 0));
        newBuyMenuItem.setText("Nouveau");
        newBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBuyMenuItemActionPerformed(evt);
            }
        });
        SellMenu.add(newBuyMenuItem);

        jMenu6.setText("Rertour");

        listReturnSellMenuItem.setText("Liste");
        listReturnSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listReturnSellMenuItemActionPerformed(evt);
            }
        });
        jMenu6.add(listReturnSellMenuItem);

        retourAchatMenuItem.setText("Nouveau");
        retourAchatMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourAchatMenuItemActionPerformed(evt);
            }
        });
        jMenu6.add(retourAchatMenuItem);

        SellMenu.add(jMenu6);

        deletedModifiedBUY.setText("Achats supp ou modifier");
        deletedModifiedBUY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedModifiedBUYActionPerformed(evt);
            }
        });
        SellMenu.add(deletedModifiedBUY);

        menuBar.add(SellMenu);

        BuyMenu.setMnemonic('V');
        BuyMenu.setText("Vente");

        listSellMenuItem.setText("Liste de ventes");
        listSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(listSellMenuItem);
        BuyMenu.add(jSeparator9);

        newSellMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, 0));
        newSellMenuItem.setText("Nouveau");
        newSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(newSellMenuItem);

        jMenu7.setText("Retour");

        listRetrunBuyMenuItem.setText("Listes");
        listRetrunBuyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listRetrunBuyMenuItemActionPerformed(evt);
            }
        });
        jMenu7.add(listRetrunBuyMenuItem);

        retourVenteMenuItem.setText("Nouveau");
        retourVenteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourVenteMenuItemActionPerformed(evt);
            }
        });
        jMenu7.add(retourVenteMenuItem);

        BuyMenu.add(jMenu7);

        compoirSellMenuItem.setText("Vente Comptoir");
        compoirSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compoirSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(compoirSellMenuItem);

        deletedSellMenuItem.setText("Ventes supp ou modifier");
        deletedSellMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedSellMenuItemActionPerformed(evt);
            }
        });
        BuyMenu.add(deletedSellMenuItem);

        menuBar.add(BuyMenu);

        mouvementMenu.setMnemonic('M');
        mouvementMenu.setText("Mouvements");

        dayMouvementMenuItem.setText("Journal cotidien");
        dayMouvementMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayMouvementMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(dayMouvementMenuItem);
        mouvementMenu.add(jSeparator13);

        graphRecetteMenuItem.setText("Graphe des recettes");
        graphRecetteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphRecetteMenuItemActionPerformed(evt);
            }
        });
        mouvementMenu.add(graphRecetteMenuItem);

        menuBar.add(mouvementMenu);

        toolsMenu.setMnemonic('O');
        toolsMenu.setText("Outils");
        toolsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsMenuActionPerformed(evt);
            }
        });

        saveDataBaseMenuItem.setText("Sauvegarder");
        saveDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(saveDataBaseMenuItem);

        restorDataBaseMenuItem.setText("Restaurer");
        restorDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restorDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(restorDataBaseMenuItem);

        emtyDataBaseMenuItem.setText("Base de donnée vide");
        emtyDataBaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emtyDataBaseMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(emtyDataBaseMenuItem);

        parameterMenuItem.setText("Paramètres");
        toolsMenu.add(parameterMenuItem);
        toolsMenu.add(jSeparator14);

        jMenuItemSaveProcTrig.setText("Sauvegarder proc & trig");
        jMenuItemSaveProcTrig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveProcTrigActionPerformed(evt);
            }
        });
        toolsMenu.add(jMenuItemSaveProcTrig);

        archiveMenuItem.setText("Archiver");
        toolsMenu.add(archiveMenuItem);

        createTables.setText("Creer les tables");
        createTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTablesActionPerformed(evt);
            }
        });
        toolsMenu.add(createTables);
        toolsMenu.add(jSeparator16);

        jMenuItem5.setText("Ouvrir un fichier excel");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        toolsMenu.add(jMenuItem5);

        menuBar.add(toolsMenu);

        windowMenu.setMnemonic('T');
        windowMenu.setText("Fenetres");
        menuBar.add(windowMenu);

        helpMenu.setMnemonic('D');
        helpMenu.setText("Aide");

        jMenuItem3.setText("A propos de");
        helpMenu.add(jMenuItem3);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modifyCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_modifyCustomerMenuItemActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        processQuit();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void buyPerProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyPerProviderMenuItemActionPerformed
        
        balanceFournisseur f = new balanceFournisseur();
        f.setVisible(true);
    }//GEN-LAST:event_buyPerProviderMenuItemActionPerformed

    private void newBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBuyMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.BUY, FileProcess.CREATE);
            }
            
        });
    }//GEN-LAST:event_newBuyMenuItemActionPerformed

    private void newSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newSellMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.SELL, FileProcess.CREATE);
            }
            
        });
        //Thread t = new Thread(new messageLoop(Operation.SELL, FileProcess.CREATE));
        //t.start();
    }//GEN-LAST:event_newSellMenuItemActionPerformed

    private void retourAchatMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourAchatMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.BUYBACK, FileProcess.CREATE);
            }
            
        });
        
    }//GEN-LAST:event_retourAchatMenuItemActionPerformed

    private void retourVenteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourVenteMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new messageLoop(Operation.SELLBACK, FileProcess.CREATE);
            }
            
        });
        //Thread t = new Thread(new messageLoop(Operation.BUYBACK, FileProcess.CREATE));
        //t.start();
    }//GEN-LAST:event_retourVenteMenuItemActionPerformed

    private void listSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listSellMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.SELL);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listSellMenuItemActionPerformed

    private void listBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBuyMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.BUY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listBuyMenuItemActionPerformed

    private void listReturnSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listReturnSellMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.SELLBACK);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listReturnSellMenuItemActionPerformed

    private void listRetrunBuyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listRetrunBuyMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListOperationFrame f = new ListOperationFrame(parentFrame,Operation.BUYBACK);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listRetrunBuyMenuItemActionPerformed

    private void compoirSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compoirSellMenuItemActionPerformed
        ComptoirFrame f = new ComptoirFrame();
        f.setVisible(true);
    }//GEN-LAST:event_compoirSellMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         processQuit();    
    }//GEN-LAST:event_formWindowClosing

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MultiSearchDialog f = new MultiSearchDialog(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void restorDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restorDataBaseMenuItemActionPerformed
        processRestoreDataBase();
    }//GEN-LAST:event_restorDataBaseMenuItemActionPerformed

    private void saveDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveDataBaseMenuItemActionPerformed
        processSaveDataBase();
    }//GEN-LAST:event_saveDataBaseMenuItemActionPerformed

    private void dayMouvementMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayMouvementMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DayMouvements f = new DayMouvements(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_dayMouvementMenuItemActionPerformed

    private void graphRecetteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphRecetteMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RecetteCotidienne f = new RecetteCotidienne(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_graphRecetteMenuItemActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        processKeyPressed(evt);
    }//GEN-LAST:event_formKeyPressed

    private void listProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListFrame f = new ListFrame(parentFrame,Operation.PRODUCT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listProductMenuItemActionPerformed

    private void listProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListFrame f = new ListFrame(parentFrame,Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listProviderMenuItemActionPerformed

    private void listCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {    
                ListFrame f = new ListFrame(parentFrame,Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_listCustomerMenuItemActionPerformed

    private void sellsPerCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellsPerCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                customerSells f = new customerSells(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_sellsPerCustomerMenuItemActionPerformed

    private void customerSituationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSituationMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {    
                Situation f = new Situation(parentFrame,Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_customerSituationMenuItemActionPerformed

    private void providerSituationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_providerSituationMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                Situation f = new Situation(parentFrame,Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_providerSituationMenuItemActionPerformed

    private void newProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                ProductDialog f = new ProductDialog(parentFrame);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newProductMenuItemActionPerformed

    private void modifyProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_modifyProductMenuItemActionPerformed

    private void deleteProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteProductMenuItemActionPerformed

    private void newProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                NewOperatorDialog f = new NewOperatorDialog(parentFrame,
                                                    Operation.PROVIDER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newProviderMenuItemActionPerformed

    private void newCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewOperatorDialog f = new NewOperatorDialog(parentFrame,
                                                    Operation.CUSTOMER);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_newCustomerMenuItemActionPerformed

    private void deletedSellMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedSellMenuItemActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                RestoreOperationDialog dlg = new RestoreOperationDialog(parentFrame
                                                            ,Operation.SELL);
                dlg.setVisible(true);
            }
        });
        
    }//GEN-LAST:event_deletedSellMenuItemActionPerformed

    private void deletedModifiedBUYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedModifiedBUYActionPerformed
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                RestoreOperationDialog dlg = new RestoreOperationDialog(parentFrame
                                                            ,Operation.BUY);
                dlg.setVisible(true);
            }
        });        
    }//GEN-LAST:event_deletedModifiedBUYActionPerformed

    private void jMenuItemSaveProcTrigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveProcTrigActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog fr;
                fr = new SaveProcTrigDialog(parentFrame);
                fr.setVisible(true);
            }
        });
    }//GEN-LAST:event_jMenuItemSaveProcTrigActionPerformed

    private void emtyDataBaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emtyDataBaseMenuItemActionPerformed
        JDBCAdapter table = JDBCAdapter.connect();
        table.executeQuery("CALL L(0)");
    }//GEN-LAST:event_emtyDataBaseMenuItemActionPerformed

    private void ImportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportMenuItemActionPerformed
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                Importation f = new Importation();
                createAndShowGUI(f,"Importation");
            }
        });        //importer des fichiers specifiques d'une autre base de données
        
    }//GEN-LAST:event_ImportMenuItemActionPerformed

    private void createTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTablesActionPerformed
        JDBCAdapter createTable = JDBCAdapter.connect();
        createTable.executeUpdate("CALL LEAY(0);");
    }//GEN-LAST:event_createTablesActionPerformed

    private void consultMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PRODUCT,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });        
    }//GEN-LAST:event_consultMenuItemActionPerformed

    private void modifyProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.MODIFY);
                f.setVisible(true);
            }
        });        // TODO add your handling code here:
    }//GEN-LAST:event_modifyProviderMenuItemActionPerformed

    private void deleteProviderMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProviderMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteProviderMenuItemActionPerformed

    private void consultProviderMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultProviderMenuItem5ActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.PROVIDER,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_consultProviderMenuItem5ActionPerformed

    private void deleteCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.DELETE);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_deleteCustomerMenuItemActionPerformed

    private void consultCustomerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultCustomerMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {        
                RechercheOperationnel f = new RechercheOperationnel(parentFrame,
                                                            Operation.CUSTOMER,
                                                            FileProcess.CONSULT);
                f.setVisible(true);
            }
        });
    }//GEN-LAST:event_consultCustomerMenuItemActionPerformed

    private void searchProductMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchProductMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.PRODUCT);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_searchProductMenuItemActionPerformed

    private void providerSearchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_providerSearchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.PROVIDER);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_providerSearchMenuItemActionPerformed

    private void customerSearchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerSearchMenuItemActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {  
                MultiSearchDialog searchProductDialog = new MultiSearchDialog(
                        parentFrame,
                        Operation.CUSTOMER);
                searchProductDialog.setVisible(true);
            }   
        });
    }//GEN-LAST:event_customerSearchMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // create a new data base with an empty files
        NewDBJDialog dialog = new NewDBJDialog(parentFrame,true);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(parentFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            System.out.println(file.getAbsolutePath());
            System.out.println(file.getName());
            readExcelFile(file.getAbsolutePath());
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void toolsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsMenuActionPerformed
        
    }
    
    private void readExcelFile(String file){    
    try {
    InputStream fs = new FileInputStream(file);
    Workbook wb = WorkbookFactory.create(fs);
    int sheetCount = wb.getNumberOfSheets();
    
    JTabbedPane tabbedPane = new JTabbedPane();
    for (int sh=0; sh < sheetCount; sh++){
    Sheet sheet = wb.getSheetAt(sh);
    Row row;
    Cell cell;

    int rows; // No of rows
    rows = sheet.getPhysicalNumberOfRows();

    int cols = 0; // No of columns
    int tmp = 0;

    // This trick ensures that we get the data properly even if it doesn't start from first few rows
    for(int i = 0; i < 10 || i < rows; i++) {
        row = sheet.getRow(i);
        if(row != null) {
            tmp = sheet.getRow(i).getPhysicalNumberOfCells();
            if(tmp > cols) cols = tmp;
        }
    }
    
    // data set for the cells
    Object [][] data = new Object[rows][cols];
    String [] columnNames = new String[cols];
     for(int c = 0; c < cols; c++) {
                cell = sheet.getRow(0).getCell((short)c);
                if(cell != null) {
                    columnNames[c] = cell.toString();
     
                }
     }
     
    for(int r = 1; r < rows; r++) {
        row = sheet.getRow(r);
        if(row != null) {
            for(int c = 0; c < cols; c++) {
                cell = row.getCell((short)c);
                if(cell != null) {
                    // Your code here
            
                    data[r][c]=cell.toString();
                }
            }
            
        }
    }
    JTable table = new JTable(data,columnNames);
    TableColumn column = null;
    
    JScrollPane scrollPane = new JScrollPane(table);
    table.setFillsViewportHeight(true);
    
    for (int i = 0; i < table.getColumnCount(); i++){
        column = table.getColumnModel().getColumn(i);
        //if ((i == 2)||(i == 3)){
            column.setPreferredWidth(150);
        //}else{
          //  column.setPreferredWidth(150);
        //}
    }   
    JPanel panel = new JPanel();
    panel.add(scrollPane);
    tabbedPane.add(sheet.getSheetName(),panel);
    }
    createAndShowGUI(tabbedPane);
    } catch(Exception ioe) {
    ioe.printStackTrace();
    }
    
    }//GEN-LAST:event_toolsMenuActionPerformed
    private static void createAndShowGUI(JTabbedPane pane) {
        //Create and set up the window.
        JFrame frame = new JFrame("Excel File Contents");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        //Create and set up the content pane.
        JPanel newContentPane = new JPanel();
        newContentPane.add(pane);
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
        FrameAdapter.centerFrame(frame);

        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu BuyMenu;
    private javax.swing.JMenu CustomerMenu;
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem ImportMenuItem;
    private javax.swing.JMenu ProductMenu;
    private javax.swing.JMenu ProviderMenu;
    private javax.swing.JMenu SellMenu;
    private javax.swing.JMenuItem archiveMenuItem;
    private javax.swing.JMenuItem buyPerProviderMenuItem;
    private javax.swing.JMenuItem chercherversementMenuItem;
    private javax.swing.JMenuItem compoirSellMenuItem;
    private javax.swing.JMenuItem consultCustomerMenuItem;
    private javax.swing.JMenuItem consultMenuItem;
    private javax.swing.JMenuItem consultProviderMenuItem5;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem createTables;
    private javax.swing.JMenuItem customerSearchMenuItem;
    private javax.swing.JMenuItem customerSituationMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem dayMouvementMenuItem;
    private javax.swing.JMenuItem deleteCustomerMenuItem;
    private javax.swing.JMenuItem deleteProductMenuItem;
    private javax.swing.JMenuItem deleteProviderMenuItem;
    private javax.swing.JMenuItem deletedModifiedBUY;
    private javax.swing.JMenuItem deletedSellMenuItem;
    public static javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem emtyDataBaseMenuItem;
    private javax.swing.JMenuItem graphRecetteMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItemSaveProcTrig;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator15;
    private javax.swing.JPopupMenu.Separator jSeparator16;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JMenuItem listBuyMenuItem;
    private javax.swing.JMenuItem listCustomerMenuItem;
    private javax.swing.JMenuItem listProductMenuItem;
    private javax.swing.JMenuItem listProviderMenuItem;
    private javax.swing.JMenuItem listRetrunBuyMenuItem;
    private javax.swing.JMenuItem listReturnSellMenuItem;
    private javax.swing.JMenuItem listSellMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem modifyCustomerMenuItem;
    private javax.swing.JMenuItem modifyProductMenuItem;
    private javax.swing.JMenuItem modifyProviderMenuItem;
    private javax.swing.JMenu mouvementMenu;
    private javax.swing.JMenuItem newBuyMenuItem;
    private javax.swing.JMenuItem newCustomerMenuItem;
    private javax.swing.JMenuItem newProductMenuItem;
    private javax.swing.JMenuItem newProviderMenuItem;
    private javax.swing.JMenuItem newSellMenuItem;
    private javax.swing.JMenuItem newWidthDrawelMenuItem;
    private javax.swing.JMenuItem nouveauVersementFournisseurMenuItem;
    private javax.swing.JMenuItem parameterMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem providerSearchMenuItem;
    private javax.swing.JMenuItem providerSituationMenuItem;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenuItem restorDataBaseMenuItem;
    private javax.swing.JMenuItem retourAchatMenuItem;
    private javax.swing.JMenuItem retourVenteMenuItem;
    private javax.swing.JMenuItem saveDataBaseMenuItem;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JMenuItem searchProductMenuItem;
    private javax.swing.JMenuItem searchWidthDrawelMenuItem;
    private javax.swing.JMenuItem sellsPerCustomerMenuItem;
    private javax.swing.JMenuItem statisticProductMenuItem;
    private javax.swing.JMenuItem stockProductMenuItem;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JMenuItem undoMenuItem;
    private javax.swing.JMenu windowMenu;
    // End of variables declaration//GEN-END:variables
   
    private void processQuit() {
        JInternalFrame frame;
        if (Demarrage.getFrame("QUIT") != null){
            frame = Demarrage.getInternalFrame("QUIT");
        }else{
            frame = new QuitFrame();
        }
        //FrameAdapter.centerFrame(frame);
        frame.setVisible(true);
        centerFrame(frame);
        desktopPane.add(frame);
        frame.requestFocusInWindow();
    }

    private void processRestoreDataBase() {
        JInternalFrame fr;
        fr = new RestoreInternalFrame();
        //FrameAdapter.centerFrame(fr);
        fr.setVisible(true);
        centerFrame(fr);
        desktopPane.add(fr);
        fr.requestFocusInWindow();
    }

    private void processSaveDataBase() {
        JDialog f;
        f = new SaveFrame(parentFrame);
        f.setVisible(true);
    }

    private void processKeyPressed(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ALT){
            this.FileMenu.setVisible(true);
        }
    }    
/**
 * Centers the internal frame in the desktop pane.
 * @param frame the internal frame to be centered.
 */
    private void centerFrame(JInternalFrame frame) {
        int d_width = desktopPane.getWidth();
        int d_height = desktopPane.getHeight();
        int f_width = frame.getWidth();
        int f_height = frame.getHeight();
        int x = (d_width - f_width) / 2;
        int y = (d_height - f_height) / 2;
        frame.setLocation(x, y);
    }

    private static class messageLoop {
        OperationWindow f;
        private messageLoop(Operation op, FileProcess fp) {
            f = new OperationWindow(parentFrame,op,fp);
            f.setVisible(true);
        }
    }
    private void createAndShowGUI(JPanel panel, String title) {
        //Create and set up the window.
        JFrame frame = new JFrame(title);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        //Add content to the window.
        frame.add(panel);

        //Display the window.
        frame.pack();
        FrameAdapter.centerFrame(frame);
        frame.setVisible(true);
    }
}
