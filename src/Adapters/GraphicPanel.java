/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Adapters;

import java.awt.Color;
import java.awt.Graphics;
import java.sql.Date;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.TextStyle;
import java.util.Locale;

/**
 *
 * @author DELL
 */
public class GraphicPanel extends javax.swing.JPanel {
    int nombreColonne = 0;
    int panelHeight = 0;
    int panelWidth = 0;
    int margeH = 0;
    int margeL = 0;
    int x_length = 0;
    int y_length = 0;
    double h;
    double step;
    LocalDate[] dates;
    int[] heights;
    String title = "Graphic representation";
    /**
     * Creates new form GraphicPanel
     */
    public GraphicPanel() {
        initComponents();
    }
    
    public GraphicPanel(int nbr, int h, int w){
        initComponents();
        nombreColonne = nbr;
        panelHeight = h;
        panelWidth = w;
    }
    
    public int getXScreen(int y){
        return panelHeight - (margeH * 2) - y;
    }
    
    public int getYScreen(int x){
        return margeL + x;
    }
    
    public int getHighstHeight(){
        int result =0;
        for (int i = 0; i < heights.length; i++){
            if ( result < heights[i]){
                result = heights[i];
            }
        }
        return result;
    }
    
    public void setPanelHeight(int h){
        panelHeight = h;
    }
    
    public void setPanelWidth(int w){
        panelWidth = w;
    }
    
    public void setNombreColonne(int n){
        nombreColonne = n;
    }
    
    public void setTitle(String s){
        title = s;
    }
    
    public void setMargeH (int h){
        margeH = h;
    }
    public void setMargeL (int l){
        margeL = l;
    }
    
    public void setDates(LocalDate[] d){
        dates = new LocalDate[nombreColonne];
        dates = d;
    }
    
    public void setHeights(int[] hs){
        heights = new int[nombreColonne];
        heights = hs;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void paintComponent(Graphics g) {
        super.paintComponent(g);       
        // Draw Text
        g.setColor(Color.BLACK);
        g.drawString(title, 500, 50);
        drawAxis(g);
        g.setColor(Color.BLUE);
        drawHistogram(g);
    }

    private void drawAxis(Graphics g) {
        //axe des igregues.
        int x1 = margeL;
        int y1 = margeH;
        int x2 = x1;
        int y2 = panelHeight - margeH;
        
        g.drawLine(x1, y1, x2, y2);
        g.drawString("y", x1 , y1 - 5);
        //axe des ixes.
        int x3 = panelWidth - margeL;
        int y3 = panelHeight - margeH;
        x_length = y2 - y1 - 20;
        y_length = x3 - x2 - 20;
        g.drawLine(x2, y2, x3, y3);
        g.drawString("0", x2 - 10, y3 + 10);
        g.drawString("x", x3 + 5 , y3);
    }
    
    private void drawHistogram(Graphics g){
        step = (y_length / (double)nombreColonne) ;
        int x, y, Width, Height ;
        h =  x_length / (double)getHighstHeight();
        g.drawLine(margeL - 3,panelHeight - x_length - margeH, 
                margeL + y_length, panelHeight - x_length - margeH);
        Month recordedMonth = Month.APRIL;
        int recordedYear = 0;
        int j = 0;
        for (int i = 0; i < nombreColonne; i ++){
            Height =(int) (heights[i] * h);
            Width = (int)step;
            x = panelHeight -  Height - margeH;
            y = margeL + (int) (step * ( i + 1));
            g.setColor(Color.BLUE);
            if (Width < 2){
                g.drawLine(y,x, y, x + Height);
            }else{
                g.drawRect(x, y, Width, Height);
            }
            if (dates[i].getMonth() != recordedMonth){
                j += 1;
                g.setColor(Color.RED);
                g.drawLine(y, x + Height + 5, y, x + Height);
                Month m = dates[i].getMonth();
                g.drawString(m.getDisplayName(TextStyle.SHORT, Locale.FRANCE), y, x + Height + 10);
                recordedMonth = dates[i].getMonth();
            }
            if (dates[i].getYear() != recordedYear){
                g.setColor(Color.GREEN);
                g.drawLine(y ,x + Height + 5, y , x + Height + 25);
                g.drawString(Integer.toString(dates[i].getYear()), y, x + Height + 25);
                recordedYear = dates[i].getYear();
            }
        }
        System.out.println("the condition is verified " + j +" times");
    }
    
    private void printState(){
        int result = 0;
        System.out.println("State-------------------");
        System.out.println("la plus grande hauteur : " + getHighstHeight());
        System.out.println("La hauteur du panel : " + panelHeight);
        System.out.println("La hauteur des axes : " + x_length);
        System.out.println("facteur de hauteur : " + h);
        System.out.println("la largeur du panel : " + y_length);
        System.out.println("Nombre de colonne :" + nombreColonne);
        System.out.println("le pas des colonnes : " + step);
        System.out.println("Les hauteurs des colonnes :");
        System.out.println("---------------------------");
        for (int i = 0; i < heights.length; i ++){
            result =(int) (heights[i] * h);
            System.out.println(i + " -----"+ heights[i] + "-----" + result);            
        }
        System.out.println("------------------------");
    }
}
